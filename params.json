{"name":"Makeclassschedule","tagline":"Make university class schedule by Parallel Genetic Algorithm in C# WinForm","body":"# [![Make Class Schedule](https://raw.githubusercontent.com/Behzadkhosravifar/MakeClassSchedule/master/src/MakeClassSchedule/Resources/Help/MCS_Help/HelpHeader.png)][1]\r\n\r\n[1]: https://raw.githubusercontent.com/Behzadkhosravifar/MakeClassSchedule/master/src/MakeClassSchedule/Resources/Help/MCS_Help.html\r\n\r\n--------------------\r\n[![Build status](https://ci.appveyor.com/api/projects/status/4cjm8ir7bswf6nse?svg=true)](https://ci.appveyor.com/project/Behzadkhosravifar/makeclassschedule)\r\n\r\n### Welcome\r\n\r\nThank you for choosing Make Class Schedule ! <br/>\r\nMake Class Schedule is one of those NP hard problems. The problem can be solved using a heuristic search algorithm to find the optimal solution, but it only works for simple cases. For more complex inputs and requirements, finding a considerably good solution can take a while, or it may be impossible. This is where genetic algorithms come in to the game. <br/>\r\nIn this article, I assume that you are familiar with the basic concepts of genetic algorithms, and I won't describe them in detail because it has been done so many times before.\r\nWhen you make a class schedule, you must take into consideration many requirements (number of professors, students, classes and classrooms, size of classroom, laboratory equipment in classroom, and many others). These requirements can be divided into several groups by their importance. Hard requirements (if you break one of these, then the schedule is infeasible):\r\n\r\n* A class can be placed only in a spare classroom.\r\n* No professor or student group can have more then one class at a time.\r\n* A classroom must have enough seats to accommodate all students.\r\n* To place a class in a classroom, the classroom must have laboratory equipment (computers, in our case) if the class requires it.\r\n\r\nSome soft requirements (can be broken, but the schedule is still feasible):\r\n\r\n* Preferred time of class by professors.\r\n* Preferred classroom by professors.\r\n* Distribution (in time or space) of classes for student groups or professors.\r\n\r\nHard and soft requirements, of course, depend on the situation.\r\n\r\n\r\n**Algorithm**\r\n\r\nThe genetic algorithm is fairly simple. For each generation, it performs two basic operations:\r\n\r\n1. Randomly selects N pairs of parents from the current population and produces N new chromosomes by performing a crossover operation on the pair of parents.\r\n2. Randomly selects N chromosomes from the current population and replaces them with new ones. The algorithm doesn't select chromosomes for replacement if it is among the best chromosomes in the population.\r\n\r\nAnd, these two operations are repeated until the best chromosome reaches a fitness value equal to 1 (meaning that all classes in the schedule meet the requirement). As mentioned before, the genetic algorithm keeps track of the M best chromosomes in the population, and guarantees that they are not going to be replaced while they are among the best chromosomes.\r\n\r\n--------------------------------\r\n### Keyboard shortcuts and modifier keys\r\n\r\nTo do this | Do this\r\n---------- | -------------\r\nCreate a New Database and delete old data | Alt + N\r\nOpen Make Class Schedule Database *.mdf file | Alt + O\r\nExport All Data in MDF file | Alt + E\r\nExit for safely of the program | Alt + F4\r\nOptions of Make Class Schedule | Alt + F5\r\nUser Accounts (Create or Change Password) | Alt + U\r\nSet Priority of Program Process | Alt + S\r\nSet Process Priority to \"RealTime\" in Operation System | Ctrl + R\r\nSet Process Priority to \"High\" in Operation System | Ctrl + H\r\nSet Process Priority to \"Above Normal\" in Operation System | Ctrl + A\r\nSet Process Priority to \"Normal\" in Operation System | Ctrl + N\r\nSet Process Priority to \"Below Normal\" in Operation System | Ctrl + B\r\nSet Process Priority to \"Low\" in Operation System | Ctrl + L\r\nSet Affinity of Processor Cores | F8\r\nHow do I? (Help) | Ctrl + F1\r\nAbout Make Class Schedule | F1\r\nShow Start Algorithm Form | F5\r\n\r\n--------------------------------\r\n### System Requirements\r\n\r\n**Hardware**:\r\n\r\nMicrosoft Windows XP, Vista, Seven 7 <br/>\r\nIntel® Pentium® 4 - 1.4 GHz or equivalent (Multi core CPU recommended for parallel processing) <br/>\r\n1GB of RAM (2 GB recommended) <br/>\r\n500 MB free hard drive space <br/>\r\n64 MB of Graphic card (128 or higher recommended) <br/>\r\nThree-button mouse with mouse driver software <br/> \r\n\r\n**Software**:\r\n\r\nWindows Installer 4.5 <br/>\r\nMicrosoft .Net Framework 4 <br/>\r\nSQL Server Compact Edition -or- SQL Express 2008 <br/>\r\nMicrosoft Excel 2003 or higher version for *.xls files <br/>\r\n\r\n--------------------------------\r\n### References\r\n\r\nUsing Genetic Algorithm Library for Class Schedules of Coolsoft:\r\n\r\nhttp://www.coolsoft-sd.com/ArticleText.aspx?id=1\r\n\r\nhttp://www.codeproject.com/KB/recipes/GaClassSchedule.aspx\r\n\r\n\r\nParallel Programming in the .Net 4 Framework:\r\n\r\nhttp://msdn.microsoft.com/en-us/library/dd460693.aspx\r\n\r\nhttp://www.codeproject.com/KB/Parallel_Programming/NET4ParallelIntro.aspx\r\n\r\nhttp://code.msdn.microsoft.com/ParExtSamples\r\n\r\nhttp://msdn.microsoft.com/en-us/library/system.threading.tasks.parallel.aspx\r\n\r\nhttp://en.wikipedia.org/wiki/Parallel_computing\r\n\r\n--------------------------------\r\n### Feedback\r\n\r\nMake Class Schedule v1.0.0.0 programmed and designed by Mr. Behzad Khosravi Far.\r\nYou can obtain free support for Make Class Schedule. You may email any questions/suggestions to:\r\nBehzad.khosravifar@gmail.com\r\n \r\nFor contact him use this phone number: +989149149202\r\nor use following Email: Behzadkh@Hotmail.com\r\n\r\n\r\n--------------------------\r\n### LICENSE INFORMATION      [![OSI-Approved-License-100x137.png](http://opensource.org/trademarks/opensource/OSI-Approved-License-100x137.png)](http://opensource.org/licenses/GPL-3.0.html)\r\n\r\nThis software is open source, licensed under the GNU General Public License, Version 3.0.\r\nSee [GPL-3.0](http://opensource.org/licenses/GPL-3.0.html) for details.\r\nThis Class Library creates a way of handling structured exception handling,\r\ninheriting from the Exception class gives us access to many method\r\nwe wouldn't otherwise have access to\r\n                  \r\nCopyright (C) 2015-2016 [Behzad Khosravifar](mailto:Behzad.Khosravifar@Gmail.com)\r\n\r\nThis program published by the Free Software Foundation,\r\neither version 1.0.1 of the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\r\n","google":"UA-68659108-1","note":"Don't delete this file! It's used internally to help with page regeneration."}