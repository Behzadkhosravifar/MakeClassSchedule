#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MakeClassSchedule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Backup")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertRoom_Type(Room_Type instance);
    partial void UpdateRoom_Type(Room_Type instance);
    partial void DeleteRoom_Type(Room_Type instance);
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertClassroom_Time(Classroom_Time instance);
    partial void UpdateClassroom_Time(Classroom_Time instance);
    partial void DeleteClassroom_Time(Classroom_Time instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertGroup_ID_List(Group_ID_List instance);
    partial void UpdateGroup_ID_List(Group_ID_List instance);
    partial void DeleteGroup_ID_List(Group_ID_List instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertPriority_Professor(Priority_Professor instance);
    partial void UpdatePriority_Professor(Priority_Professor instance);
    partial void DeletePriority_Professor(Priority_Professor instance);
    partial void InsertProfessor(Professor instance);
    partial void UpdateProfessor(Professor instance);
    partial void DeleteProfessor(Professor instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::MakeClassSchedule.Properties.Settings.Default.BackupConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Room_Type> Room_Types
		{
			get
			{
				return this.GetTable<Room_Type>();
			}
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<Classroom_Time> Classroom_Times
		{
			get
			{
				return this.GetTable<Classroom_Time>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<Group_ID_List> Group_ID_Lists
		{
			get
			{
				return this.GetTable<Group_ID_List>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<New_GroupsPerClass> New_GroupsPerClasses
		{
			get
			{
				return this.GetTable<New_GroupsPerClass>();
			}
		}
		
		public System.Data.Linq.Table<Priority_Professor> Priority_Professors
		{
			get
			{
				return this.GetTable<Priority_Professor>();
			}
		}
		
		public System.Data.Linq.Table<Professor> Professors
		{
			get
			{
				return this.GetTable<Professor>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BranchDelete")]
		public int BranchDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RoomSave")]
		public int RoomSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(100)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, type, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BranchEdit")]
		public int BranchEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="NVarChar(100)")] string degree)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, degree);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BranchSave")]
		public int BranchSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Degree", DbType="NVarChar(100)")] string degree)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, degree);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BranchSearchID")]
		public ISingleResult<BranchSearchIDResult> BranchSearchID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchID", DbType="Int")] System.Nullable<int> branchID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), branchID);
			return ((ISingleResult<BranchSearchIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClassDelete")]
		public int ClassDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClassEdit")]
		public int ClassEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class_ID", DbType="Int")] System.Nullable<int> class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Course_ID", DbType="Int")] System.Nullable<int> course_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PU", DbType="Int")] System.Nullable<int> pU, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TU", DbType="Int")] System.Nullable<int> tU, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomType", DbType="NVarChar(50)")] string roomType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), class_ID, course_ID, pU, tU, roomType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Classroom_TimeDelete")]
		public int Classroom_TimeDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Room_ID", DbType="Int")] System.Nullable<int> room_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class_ID", DbType="Int")] System.Nullable<int> class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartTime", DbType="Int")] System.Nullable<int> startTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DayNo", DbType="Int")] System.Nullable<int> dayNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), room_ID, class_ID, startTime, dayNo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Classroom_TimeDeleteAll")]
		public int Classroom_TimeDeleteAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Classroom_TimeDeleteClass")]
		public int Classroom_TimeDeleteClass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Classroom_TimeEdit")]
		public int Classroom_TimeEdit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> old_Room_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> new_Room_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> old_Class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> new_Class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="P_ID", DbType="Int")] System.Nullable<int> p_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> old_sTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> new_sTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dur, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> old_Day, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> new_Day)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), old_Room_ID, new_Room_ID, old_Class_ID, new_Class_ID, p_ID, old_sTime, new_sTime, dur, old_Day, new_Day);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Classroom_TimeSave")]
		public int Classroom_TimeSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="R_ID", DbType="Int")] System.Nullable<int> r_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="C_ID", DbType="Int")] System.Nullable<int> c_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="P_ID", DbType="Int")] System.Nullable<int> p_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dur, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Day", DbType="Int")] System.Nullable<int> day)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), r_ID, c_ID, p_ID, sTime, dur, day);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClassroomDeleteProf")]
		public int ClassroomDeleteProf([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Professor_ID", DbType="Int")] System.Nullable<int> professor_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), professor_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ClassSave")]
		public int ClassSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class_ID", DbType="Int")] System.Nullable<int> class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Course_ID", DbType="Int")] System.Nullable<int> course_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PU", DbType="Int")] System.Nullable<int> pU, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TU", DbType="Int")] System.Nullable<int> tU, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoomType", DbType="NVarChar(50)")] string roomType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), class_ID, course_ID, pU, tU, roomType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CourseDelete")]
		public int CourseDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CourseEdit")]
		public int CourseEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchID", DbType="Int")] System.Nullable<int> branchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Term", DbType="Int")] System.Nullable<int> term, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="Decimal(18,0)")] System.Nullable<decimal> code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheoryUN", DbType="Int")] System.Nullable<int> theoryUN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PracticalUN", DbType="Int")] System.Nullable<int> practicalUN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InRCId", DbType="NVarChar(100)")] string inRCId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreRCId", DbType="NVarChar(100)")] string preRCId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, branchID, term, name, type, code, theoryUN, practicalUN, inRCId, preRCId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CourseSave")]
		public int CourseSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BranchID", DbType="Int")] System.Nullable<int> branchID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Term", DbType="Int")] System.Nullable<int> term, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Code", DbType="Decimal(18,0)")] System.Nullable<decimal> code, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TheoryUN", DbType="Int")] System.Nullable<int> theoryUN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PracticalUN", DbType="Int")] System.Nullable<int> practicalUN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InRCId", DbType="NVarChar(100)")] string inRCId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PreRCId", DbType="NVarChar(100)")] string preRCId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, branchID, term, name, type, code, theoryUN, practicalUN, inRCId, preRCId);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CourseSearchID")]
		public ISingleResult<CourseSearchIDResult> CourseSearchID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((ISingleResult<CourseSearchIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CourseSearchNAME")]
		public ISingleResult<CourseSearchNAMEResult> CourseSearchNAME([global::System.Data.Linq.Mapping.ParameterAttribute(Name="NAME", DbType="NVarChar(100)")] string nAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nAME);
			return ((ISingleResult<CourseSearchNAMEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Group_ID_ListDeleteAll")]
		public int Group_ID_ListDeleteAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Group_ID_ListDeleteClass")]
		public int Group_ID_ListDeleteClass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClassID", DbType="Int")] System.Nullable<int> classID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Group_ID_ListSave")]
		public int Group_ID_ListSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="G_Id", DbType="Int")] System.Nullable<int> g_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="C_Id", DbType="Int")] System.Nullable<int> c_Id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), g_Id, c_Id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GroupsDelete")]
		public int GroupsDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GroupsEdit")]
		public int GroupsEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SemesterEntryY", DbType="Int")] System.Nullable<int> semesterEntryY, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SemesterEntryB", DbType="Bit")] System.Nullable<bool> semesterEntryB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SelectedCourse", DbType="Int")] System.Nullable<int> selectedCourse, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, semesterEntryY, semesterEntryB, selectedCourse, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GroupsSave")]
		public int GroupsSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SemesterEntryY", DbType="Int")] System.Nullable<int> semesterEntryY, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SemesterEntryB", DbType="Bit")] System.Nullable<bool> semesterEntryB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch_Selection", DbType="Int")] System.Nullable<int> branch_Selection, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, semesterEntryY, semesterEntryB, branch_Selection, size);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.New_GroupsPerClassDeleteAll")]
		public int New_GroupsPerClassDeleteAll()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.New_GroupsPerClassDeleteByGroupID")]
		public int New_GroupsPerClassDeleteByGroupID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group_ID", DbType="Int")] System.Nullable<int> group_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), group_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.New_GroupsPerClassSave")]
		public int New_GroupsPerClassSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Room_ID", DbType="Int")] System.Nullable<int> room_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class_ID", DbType="Int")] System.Nullable<int> class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Day", DbType="Int")] System.Nullable<int> day, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Group_ID", DbType="Int")] System.Nullable<int> group_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), room_ID, class_ID, sTime, day, group_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Priority_ProfessorDelete")]
		public int Priority_ProfessorDelete()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Priority_ProfessorDeleteClass")]
		public int Priority_ProfessorDeleteClass([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class_ID", DbType="Int")] System.Nullable<int> class_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), class_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Priority_ProfessorSave")]
		public int Priority_ProfessorSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Professor_ID", DbType="Int")] System.Nullable<int> professor_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Class_ID", DbType="Int")] System.Nullable<int> class_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Priority", DbType="Decimal(18,0)")] System.Nullable<decimal> priority)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), professor_ID, class_ID, priority);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProfessorDelete")]
		public int ProfessorDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProfessorEdit")]
		public int ProfessorEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="NVarChar(100)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ED", DbType="NVarChar(20)")] string eD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Schedule", DbType="Text")] string schedule)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, branch, email, eD, schedule);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ProfessorSave")]
		public int ProfessorSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="NVarChar(100)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="NVarChar(100)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EducationDegree", DbType="NVarChar(20)")] string educationDegree, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Schedule", DbType="Text")] string schedule)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, branch, email, educationDegree, schedule);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Room_TypeDelete")]
		public int Room_TypeDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(100)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Room_TypeSave")]
		public int Room_TypeSave([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(100)")] string type)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RoomDelete")]
		public int RoomDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RoomEdit")]
		public int RoomEdit([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="NVarChar(100)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, name, type, size);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Branch;
		
		private string _Branch_Name;
		
		private string _Degree;
		
		private EntitySet<Course> _Courses;
		
		private EntitySet<Group> _Groups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_BranchChanging(int value);
    partial void OnID_BranchChanged();
    partial void OnBranch_NameChanging(string value);
    partial void OnBranch_NameChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    #endregion
		
		public Branch()
		{
			this._Courses = new EntitySet<Course>(new Action<Course>(this.attach_Courses), new Action<Course>(this.detach_Courses));
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Branch", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Branch
		{
			get
			{
				return this._ID_Branch;
			}
			set
			{
				if ((this._ID_Branch != value))
				{
					this.OnID_BranchChanging(value);
					this.SendPropertyChanging();
					this._ID_Branch = value;
					this.SendPropertyChanged("ID_Branch");
					this.OnID_BranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch_Name
		{
			get
			{
				return this._Branch_Name;
			}
			set
			{
				if ((this._Branch_Name != value))
				{
					this.OnBranch_NameChanging(value);
					this.SendPropertyChanging();
					this._Branch_Name = value;
					this.SendPropertyChanged("Branch_Name");
					this.OnBranch_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Course", Storage="_Courses", ThisKey="ID_Branch", OtherKey="Branch_ID")]
		public EntitySet<Course> Courses
		{
			get
			{
				return this._Courses;
			}
			set
			{
				this._Courses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Group", Storage="_Groups", ThisKey="ID_Branch", OtherKey="Branch_Selection")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Courses(Course entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room_Type")]
	public partial class Room_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Type_Name;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<Room> _Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnType_NameChanging(string value);
    partial void OnType_NameChanged();
    #endregion
		
		public Room_Type()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Type_Name
		{
			get
			{
				return this._Type_Name;
			}
			set
			{
				if ((this._Type_Name != value))
				{
					this.OnType_NameChanging(value);
					this.SendPropertyChanging();
					this._Type_Name = value;
					this.SendPropertyChanged("Type_Name");
					this.OnType_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Type_Class", Storage="_Classes", ThisKey="Type_Name", OtherKey="RoomType")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Type_Room", Storage="_Rooms", ThisKey="Type_Name", OtherKey="Type_Room")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Room_Type = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Room_Type = null;
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Room_Type = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.Room_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Class")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Class_ID;
		
		private int _Course_ID;
		
		private int _Practical_unit;
		
		private int _Theory_unit;
		
		private string _RoomType;
		
		private EntitySet<Classroom_Time> _Classroom_Times;
		
		private EntitySet<Group_ID_List> _Group_ID_Lists;
		
		private EntitySet<Priority_Professor> _Priority_Professors;
		
		private EntityRef<Room_Type> _Room_Type;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClass_IDChanging(int value);
    partial void OnClass_IDChanged();
    partial void OnCourse_IDChanging(int value);
    partial void OnCourse_IDChanged();
    partial void OnPractical_unitChanging(int value);
    partial void OnPractical_unitChanged();
    partial void OnTheory_unitChanging(int value);
    partial void OnTheory_unitChanged();
    partial void OnRoomTypeChanging(string value);
    partial void OnRoomTypeChanged();
    #endregion
		
		public Class()
		{
			this._Classroom_Times = new EntitySet<Classroom_Time>(new Action<Classroom_Time>(this.attach_Classroom_Times), new Action<Classroom_Time>(this.detach_Classroom_Times));
			this._Group_ID_Lists = new EntitySet<Group_ID_List>(new Action<Group_ID_List>(this.attach_Group_ID_Lists), new Action<Group_ID_List>(this.detach_Group_ID_Lists));
			this._Priority_Professors = new EntitySet<Priority_Professor>(new Action<Priority_Professor>(this.attach_Priority_Professors), new Action<Priority_Professor>(this.detach_Priority_Professors));
			this._Room_Type = default(EntityRef<Room_Type>);
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Class_ID
		{
			get
			{
				return this._Class_ID;
			}
			set
			{
				if ((this._Class_ID != value))
				{
					this.OnClass_IDChanging(value);
					this.SendPropertyChanging();
					this._Class_ID = value;
					this.SendPropertyChanged("Class_ID");
					this.OnClass_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="Int NOT NULL")]
		public int Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Practical_unit", DbType="Int NOT NULL")]
		public int Practical_unit
		{
			get
			{
				return this._Practical_unit;
			}
			set
			{
				if ((this._Practical_unit != value))
				{
					this.OnPractical_unitChanging(value);
					this.SendPropertyChanging();
					this._Practical_unit = value;
					this.SendPropertyChanged("Practical_unit");
					this.OnPractical_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Theory_unit", DbType="Int NOT NULL")]
		public int Theory_unit
		{
			get
			{
				return this._Theory_unit;
			}
			set
			{
				if ((this._Theory_unit != value))
				{
					this.OnTheory_unitChanging(value);
					this.SendPropertyChanging();
					this._Theory_unit = value;
					this.SendPropertyChanged("Theory_unit");
					this.OnTheory_unitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string RoomType
		{
			get
			{
				return this._RoomType;
			}
			set
			{
				if ((this._RoomType != value))
				{
					if (this._Room_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoomTypeChanging(value);
					this.SendPropertyChanging();
					this._RoomType = value;
					this.SendPropertyChanged("RoomType");
					this.OnRoomTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Classroom_Time", Storage="_Classroom_Times", ThisKey="Class_ID", OtherKey="Class_ID")]
		public EntitySet<Classroom_Time> Classroom_Times
		{
			get
			{
				return this._Classroom_Times;
			}
			set
			{
				this._Classroom_Times.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Group_ID_List", Storage="_Group_ID_Lists", ThisKey="Class_ID", OtherKey="Class_ID")]
		public EntitySet<Group_ID_List> Group_ID_Lists
		{
			get
			{
				return this._Group_ID_Lists;
			}
			set
			{
				this._Group_ID_Lists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Priority_Professor", Storage="_Priority_Professors", ThisKey="Class_ID", OtherKey="Class_ID")]
		public EntitySet<Priority_Professor> Priority_Professors
		{
			get
			{
				return this._Priority_Professors;
			}
			set
			{
				this._Priority_Professors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Type_Class", Storage="_Room_Type", ThisKey="RoomType", OtherKey="Type_Name", IsForeignKey=true)]
		public Room_Type Room_Type
		{
			get
			{
				return this._Room_Type.Entity;
			}
			set
			{
				Room_Type previousValue = this._Room_Type.Entity;
				if (((previousValue != value) 
							|| (this._Room_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room_Type.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Room_Type.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._RoomType = value.Type_Name;
					}
					else
					{
						this._RoomType = default(string);
					}
					this.SendPropertyChanged("Room_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Class", Storage="_Course", ThisKey="Course_ID", OtherKey="Course_ID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._Course_ID = value.Course_ID;
					}
					else
					{
						this._Course_ID = default(int);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classroom_Times(Classroom_Time entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Classroom_Times(Classroom_Time entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Group_ID_Lists(Group_ID_List entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Group_ID_Lists(Group_ID_List entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
		
		private void attach_Priority_Professors(Priority_Professor entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Priority_Professors(Priority_Professor entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classroom_Time")]
	public partial class Classroom_Time : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Room_ID;
		
		private int _Class_ID;
		
		private int _Professor_ID;
		
		private int _StartTime;
		
		private short _Duration;
		
		private int _Day_No;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Professor> _Professor;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoom_IDChanging(int value);
    partial void OnRoom_IDChanged();
    partial void OnClass_IDChanging(int value);
    partial void OnClass_IDChanged();
    partial void OnProfessor_IDChanging(int value);
    partial void OnProfessor_IDChanged();
    partial void OnStartTimeChanging(int value);
    partial void OnStartTimeChanged();
    partial void OnDurationChanging(short value);
    partial void OnDurationChanged();
    partial void OnDay_NoChanging(int value);
    partial void OnDay_NoChanged();
    #endregion
		
		public Classroom_Time()
		{
			this._Class = default(EntityRef<Class>);
			this._Professor = default(EntityRef<Professor>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Class_ID
		{
			get
			{
				return this._Class_ID;
			}
			set
			{
				if ((this._Class_ID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_IDChanging(value);
					this.SendPropertyChanging();
					this._Class_ID = value;
					this.SendPropertyChanged("Class_ID");
					this.OnClass_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Professor_ID", DbType="Int NOT NULL")]
		public int Professor_ID
		{
			get
			{
				return this._Professor_ID;
			}
			set
			{
				if ((this._Professor_ID != value))
				{
					if (this._Professor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessor_IDChanging(value);
					this.SendPropertyChanging();
					this._Professor_ID = value;
					this.SendPropertyChanged("Professor_ID");
					this.OnProfessor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="SmallInt NOT NULL")]
		public short Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Day_No
		{
			get
			{
				return this._Day_No;
			}
			set
			{
				if ((this._Day_No != value))
				{
					this.OnDay_NoChanging(value);
					this.SendPropertyChanging();
					this._Day_No = value;
					this.SendPropertyChanged("Day_No");
					this.OnDay_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Classroom_Time", Storage="_Class", ThisKey="Class_ID", OtherKey="Class_ID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Classroom_Times.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Classroom_Times.Add(this);
						this._Class_ID = value.Class_ID;
					}
					else
					{
						this._Class_ID = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professor_Classroom_Time", Storage="_Professor", ThisKey="Professor_ID", OtherKey="ID", IsForeignKey=true)]
		public Professor Professor
		{
			get
			{
				return this._Professor.Entity;
			}
			set
			{
				Professor previousValue = this._Professor.Entity;
				if (((previousValue != value) 
							|| (this._Professor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professor.Entity = null;
						previousValue.Classroom_Times.Remove(this);
					}
					this._Professor.Entity = value;
					if ((value != null))
					{
						value.Classroom_Times.Add(this);
						this._Professor_ID = value.ID;
					}
					else
					{
						this._Professor_ID = default(int);
					}
					this.SendPropertyChanged("Professor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Classroom_Time", Storage="_Room", ThisKey="Room_ID", OtherKey="Room_ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.Classroom_Times.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.Classroom_Times.Add(this);
						this._Room_ID = value.Room_ID;
					}
					else
					{
						this._Room_ID = default(int);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Course_ID;
		
		private int _Branch_ID;
		
		private System.Nullable<int> _TermNo;
		
		private string _Name_Course;
		
		private string _Type_Course;
		
		private System.Nullable<decimal> _CourseCode;
		
		private System.Nullable<int> _TheoryUnitNo;
		
		private System.Nullable<int> _PracticalUnitNo;
		
		private string _InRequisite_CourseID;
		
		private string _PreRequisite_CourseID;
		
		private EntitySet<Class> _Classes;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourse_IDChanging(int value);
    partial void OnCourse_IDChanged();
    partial void OnBranch_IDChanging(int value);
    partial void OnBranch_IDChanged();
    partial void OnTermNoChanging(System.Nullable<int> value);
    partial void OnTermNoChanged();
    partial void OnName_CourseChanging(string value);
    partial void OnName_CourseChanged();
    partial void OnType_CourseChanging(string value);
    partial void OnType_CourseChanged();
    partial void OnCourseCodeChanging(System.Nullable<decimal> value);
    partial void OnCourseCodeChanged();
    partial void OnTheoryUnitNoChanging(System.Nullable<int> value);
    partial void OnTheoryUnitNoChanged();
    partial void OnPracticalUnitNoChanging(System.Nullable<int> value);
    partial void OnPracticalUnitNoChanged();
    partial void OnInRequisite_CourseIDChanging(string value);
    partial void OnInRequisite_CourseIDChanged();
    partial void OnPreRequisite_CourseIDChanging(string value);
    partial void OnPreRequisite_CourseIDChanged();
    #endregion
		
		public Course()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this.OnCourse_IDChanging(value);
					this.SendPropertyChanging();
					this._Course_ID = value;
					this.SendPropertyChanged("Course_ID");
					this.OnCourse_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_ID", DbType="Int NOT NULL")]
		public int Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranch_IDChanging(value);
					this.SendPropertyChanging();
					this._Branch_ID = value;
					this.SendPropertyChanged("Branch_ID");
					this.OnBranch_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermNo", DbType="Int")]
		public System.Nullable<int> TermNo
		{
			get
			{
				return this._TermNo;
			}
			set
			{
				if ((this._TermNo != value))
				{
					this.OnTermNoChanging(value);
					this.SendPropertyChanging();
					this._TermNo = value;
					this.SendPropertyChanged("TermNo");
					this.OnTermNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Course", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name_Course
		{
			get
			{
				return this._Name_Course;
			}
			set
			{
				if ((this._Name_Course != value))
				{
					this.OnName_CourseChanging(value);
					this.SendPropertyChanging();
					this._Name_Course = value;
					this.SendPropertyChanged("Name_Course");
					this.OnName_CourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Course", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_Course
		{
			get
			{
				return this._Type_Course;
			}
			set
			{
				if ((this._Type_Course != value))
				{
					this.OnType_CourseChanging(value);
					this.SendPropertyChanging();
					this._Type_Course = value;
					this.SendPropertyChanged("Type_Course");
					this.OnType_CourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this.OnCourseCodeChanging(value);
					this.SendPropertyChanging();
					this._CourseCode = value;
					this.SendPropertyChanged("CourseCode");
					this.OnCourseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryUnitNo", DbType="Int")]
		public System.Nullable<int> TheoryUnitNo
		{
			get
			{
				return this._TheoryUnitNo;
			}
			set
			{
				if ((this._TheoryUnitNo != value))
				{
					this.OnTheoryUnitNoChanging(value);
					this.SendPropertyChanging();
					this._TheoryUnitNo = value;
					this.SendPropertyChanged("TheoryUnitNo");
					this.OnTheoryUnitNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalUnitNo", DbType="Int")]
		public System.Nullable<int> PracticalUnitNo
		{
			get
			{
				return this._PracticalUnitNo;
			}
			set
			{
				if ((this._PracticalUnitNo != value))
				{
					this.OnPracticalUnitNoChanging(value);
					this.SendPropertyChanging();
					this._PracticalUnitNo = value;
					this.SendPropertyChanged("PracticalUnitNo");
					this.OnPracticalUnitNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InRequisite_CourseID", DbType="NVarChar(100)")]
		public string InRequisite_CourseID
		{
			get
			{
				return this._InRequisite_CourseID;
			}
			set
			{
				if ((this._InRequisite_CourseID != value))
				{
					this.OnInRequisite_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._InRequisite_CourseID = value;
					this.SendPropertyChanged("InRequisite_CourseID");
					this.OnInRequisite_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreRequisite_CourseID", DbType="NVarChar(100)")]
		public string PreRequisite_CourseID
		{
			get
			{
				return this._PreRequisite_CourseID;
			}
			set
			{
				if ((this._PreRequisite_CourseID != value))
				{
					this.OnPreRequisite_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._PreRequisite_CourseID = value;
					this.SendPropertyChanged("PreRequisite_CourseID");
					this.OnPreRequisite_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Class", Storage="_Classes", ThisKey="Course_ID", OtherKey="Course_ID")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Course", Storage="_Branch", ThisKey="Branch_ID", OtherKey="ID_Branch", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Courses.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Courses.Add(this);
						this._Branch_ID = value.ID_Branch;
					}
					else
					{
						this._Branch_ID = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Group_ID_List")]
	public partial class Group_ID_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Group_ID;
		
		private int _Class_ID;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroup_IDChanging(int value);
    partial void OnGroup_IDChanged();
    partial void OnClass_IDChanging(int value);
    partial void OnClass_IDChanged();
    #endregion
		
		public Group_ID_List()
		{
			this._Class = default(EntityRef<Class>);
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroup_IDChanging(value);
					this.SendPropertyChanging();
					this._Group_ID = value;
					this.SendPropertyChanged("Group_ID");
					this.OnGroup_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Class_ID
		{
			get
			{
				return this._Class_ID;
			}
			set
			{
				if ((this._Class_ID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_IDChanging(value);
					this.SendPropertyChanging();
					this._Class_ID = value;
					this.SendPropertyChanged("Class_ID");
					this.OnClass_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Group_ID_List", Storage="_Class", ThisKey="Class_ID", OtherKey="Class_ID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Group_ID_Lists.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Group_ID_Lists.Add(this);
						this._Class_ID = value.Class_ID;
					}
					else
					{
						this._Class_ID = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group_ID_List", Storage="_Group", ThisKey="Group_ID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Group_ID_Lists.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Group_ID_Lists.Add(this);
						this._Group_ID = value.ID;
					}
					else
					{
						this._Group_ID = default(int);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Semester_Entry_Year;
		
		private bool _Semester_Entry_FS;
		
		private System.Nullable<int> _Branch_Selection;
		
		private int _Size_No;
		
		private EntitySet<Group_ID_List> _Group_ID_Lists;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSemester_Entry_YearChanging(int value);
    partial void OnSemester_Entry_YearChanged();
    partial void OnSemester_Entry_FSChanging(bool value);
    partial void OnSemester_Entry_FSChanged();
    partial void OnBranch_SelectionChanging(System.Nullable<int> value);
    partial void OnBranch_SelectionChanged();
    partial void OnSize_NoChanging(int value);
    partial void OnSize_NoChanged();
    #endregion
		
		public Group()
		{
			this._Group_ID_Lists = new EntitySet<Group_ID_List>(new Action<Group_ID_List>(this.attach_Group_ID_Lists), new Action<Group_ID_List>(this.detach_Group_ID_Lists));
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester_Entry_Year", DbType="Int NOT NULL")]
		public int Semester_Entry_Year
		{
			get
			{
				return this._Semester_Entry_Year;
			}
			set
			{
				if ((this._Semester_Entry_Year != value))
				{
					this.OnSemester_Entry_YearChanging(value);
					this.SendPropertyChanging();
					this._Semester_Entry_Year = value;
					this.SendPropertyChanged("Semester_Entry_Year");
					this.OnSemester_Entry_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Semester_Entry_FS", DbType="Bit NOT NULL")]
		public bool Semester_Entry_FS
		{
			get
			{
				return this._Semester_Entry_FS;
			}
			set
			{
				if ((this._Semester_Entry_FS != value))
				{
					this.OnSemester_Entry_FSChanging(value);
					this.SendPropertyChanging();
					this._Semester_Entry_FS = value;
					this.SendPropertyChanged("Semester_Entry_FS");
					this.OnSemester_Entry_FSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Selection", DbType="Int")]
		public System.Nullable<int> Branch_Selection
		{
			get
			{
				return this._Branch_Selection;
			}
			set
			{
				if ((this._Branch_Selection != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranch_SelectionChanging(value);
					this.SendPropertyChanging();
					this._Branch_Selection = value;
					this.SendPropertyChanged("Branch_Selection");
					this.OnBranch_SelectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size_No", DbType="Int NOT NULL")]
		public int Size_No
		{
			get
			{
				return this._Size_No;
			}
			set
			{
				if ((this._Size_No != value))
				{
					this.OnSize_NoChanging(value);
					this.SendPropertyChanging();
					this._Size_No = value;
					this.SendPropertyChanged("Size_No");
					this.OnSize_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_Group_ID_List", Storage="_Group_ID_Lists", ThisKey="ID", OtherKey="Group_ID")]
		public EntitySet<Group_ID_List> Group_ID_Lists
		{
			get
			{
				return this._Group_ID_Lists;
			}
			set
			{
				this._Group_ID_Lists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Group", Storage="_Branch", ThisKey="Branch_Selection", OtherKey="ID_Branch", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._Branch_Selection = value.ID_Branch;
					}
					else
					{
						this._Branch_Selection = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Group_ID_Lists(Group_ID_List entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Group_ID_Lists(Group_ID_List entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.New_GroupsPerClass")]
	public partial class New_GroupsPerClass
	{
		
		private int _Room_ID;
		
		private int _Class_ID;
		
		private int _StartTime;
		
		private int _Day_No;
		
		private int _Group_ID;
		
		public New_GroupsPerClass()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int NOT NULL")]
		public int Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					this._Room_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_ID", DbType="Int NOT NULL")]
		public int Class_ID
		{
			get
			{
				return this._Class_ID;
			}
			set
			{
				if ((this._Class_ID != value))
				{
					this._Class_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="Int NOT NULL")]
		public int StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this._StartTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day_No", DbType="Int NOT NULL")]
		public int Day_No
		{
			get
			{
				return this._Day_No;
			}
			set
			{
				if ((this._Day_No != value))
				{
					this._Day_No = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Group_ID", DbType="Int NOT NULL")]
		public int Group_ID
		{
			get
			{
				return this._Group_ID;
			}
			set
			{
				if ((this._Group_ID != value))
				{
					this._Group_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Priority_Professor")]
	public partial class Priority_Professor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Professor_ID;
		
		private int _Class_ID;
		
		private decimal _Priority;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Professor> _Professor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfessor_IDChanging(int value);
    partial void OnProfessor_IDChanged();
    partial void OnClass_IDChanging(int value);
    partial void OnClass_IDChanged();
    partial void OnPriorityChanging(decimal value);
    partial void OnPriorityChanged();
    #endregion
		
		public Priority_Professor()
		{
			this._Class = default(EntityRef<Class>);
			this._Professor = default(EntityRef<Professor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Professor_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Professor_ID
		{
			get
			{
				return this._Professor_ID;
			}
			set
			{
				if ((this._Professor_ID != value))
				{
					if (this._Professor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfessor_IDChanging(value);
					this.SendPropertyChanging();
					this._Professor_ID = value;
					this.SendPropertyChanged("Professor_ID");
					this.OnProfessor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Class_ID
		{
			get
			{
				return this._Class_ID;
			}
			set
			{
				if ((this._Class_ID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClass_IDChanging(value);
					this.SendPropertyChanging();
					this._Class_ID = value;
					this.SendPropertyChanged("Class_ID");
					this.OnClass_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Decimal(18,0) NOT NULL")]
		public decimal Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Priority_Professor", Storage="_Class", ThisKey="Class_ID", OtherKey="Class_ID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Priority_Professors.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Priority_Professors.Add(this);
						this._Class_ID = value.Class_ID;
					}
					else
					{
						this._Class_ID = default(int);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professor_Priority_Professor", Storage="_Professor", ThisKey="Professor_ID", OtherKey="ID", IsForeignKey=true)]
		public Professor Professor
		{
			get
			{
				return this._Professor.Entity;
			}
			set
			{
				Professor previousValue = this._Professor.Entity;
				if (((previousValue != value) 
							|| (this._Professor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Professor.Entity = null;
						previousValue.Priority_Professors.Remove(this);
					}
					this._Professor.Entity = value;
					if ((value != null))
					{
						value.Priority_Professors.Add(this);
						this._Professor_ID = value.ID;
					}
					else
					{
						this._Professor_ID = default(int);
					}
					this.SendPropertyChanged("Professor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Professor")]
	public partial class Professor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name_Professor;
		
		private string _Branch;
		
		private string _Email;
		
		private string _EducationDegree;
		
		private string _Schedule;
		
		private EntitySet<Classroom_Time> _Classroom_Times;
		
		private EntitySet<Priority_Professor> _Priority_Professors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnName_ProfessorChanging(string value);
    partial void OnName_ProfessorChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEducationDegreeChanging(string value);
    partial void OnEducationDegreeChanged();
    partial void OnScheduleChanging(string value);
    partial void OnScheduleChanged();
    #endregion
		
		public Professor()
		{
			this._Classroom_Times = new EntitySet<Classroom_Time>(new Action<Classroom_Time>(this.attach_Classroom_Times), new Action<Classroom_Time>(this.detach_Classroom_Times));
			this._Priority_Professors = new EntitySet<Priority_Professor>(new Action<Priority_Professor>(this.attach_Priority_Professors), new Action<Priority_Professor>(this.detach_Priority_Professors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Professor", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name_Professor
		{
			get
			{
				return this._Name_Professor;
			}
			set
			{
				if ((this._Name_Professor != value))
				{
					this.OnName_ProfessorChanging(value);
					this.SendPropertyChanging();
					this._Name_Professor = value;
					this.SendPropertyChanged("Name_Professor");
					this.OnName_ProfessorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(100)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationDegree", DbType="NVarChar(20)")]
		public string EducationDegree
		{
			get
			{
				return this._EducationDegree;
			}
			set
			{
				if ((this._EducationDegree != value))
				{
					this.OnEducationDegreeChanging(value);
					this.SendPropertyChanging();
					this._EducationDegree = value;
					this.SendPropertyChanged("EducationDegree");
					this.OnEducationDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schedule", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Schedule
		{
			get
			{
				return this._Schedule;
			}
			set
			{
				if ((this._Schedule != value))
				{
					this.OnScheduleChanging(value);
					this.SendPropertyChanging();
					this._Schedule = value;
					this.SendPropertyChanged("Schedule");
					this.OnScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professor_Classroom_Time", Storage="_Classroom_Times", ThisKey="ID", OtherKey="Professor_ID")]
		public EntitySet<Classroom_Time> Classroom_Times
		{
			get
			{
				return this._Classroom_Times;
			}
			set
			{
				this._Classroom_Times.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Professor_Priority_Professor", Storage="_Priority_Professors", ThisKey="ID", OtherKey="Professor_ID")]
		public EntitySet<Priority_Professor> Priority_Professors
		{
			get
			{
				return this._Priority_Professors;
			}
			set
			{
				this._Priority_Professors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classroom_Times(Classroom_Time entity)
		{
			this.SendPropertyChanging();
			entity.Professor = this;
		}
		
		private void detach_Classroom_Times(Classroom_Time entity)
		{
			this.SendPropertyChanging();
			entity.Professor = null;
		}
		
		private void attach_Priority_Professors(Priority_Professor entity)
		{
			this.SendPropertyChanging();
			entity.Professor = this;
		}
		
		private void detach_Priority_Professors(Priority_Professor entity)
		{
			this.SendPropertyChanging();
			entity.Professor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Room_ID;
		
		private string _Name_Room;
		
		private string _Type_Room;
		
		private int _Size_No;
		
		private EntitySet<Classroom_Time> _Classroom_Times;
		
		private EntityRef<Room_Type> _Room_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoom_IDChanging(int value);
    partial void OnRoom_IDChanged();
    partial void OnName_RoomChanging(string value);
    partial void OnName_RoomChanged();
    partial void OnType_RoomChanging(string value);
    partial void OnType_RoomChanged();
    partial void OnSize_NoChanging(int value);
    partial void OnSize_NoChanged();
    #endregion
		
		public Room()
		{
			this._Classroom_Times = new EntitySet<Classroom_Time>(new Action<Classroom_Time>(this.attach_Classroom_Times), new Action<Classroom_Time>(this.detach_Classroom_Times));
			this._Room_Type = default(EntityRef<Room_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Room_ID
		{
			get
			{
				return this._Room_ID;
			}
			set
			{
				if ((this._Room_ID != value))
				{
					this.OnRoom_IDChanging(value);
					this.SendPropertyChanging();
					this._Room_ID = value;
					this.SendPropertyChanged("Room_ID");
					this.OnRoom_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Room", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Room
		{
			get
			{
				return this._Name_Room;
			}
			set
			{
				if ((this._Name_Room != value))
				{
					this.OnName_RoomChanging(value);
					this.SendPropertyChanging();
					this._Name_Room = value;
					this.SendPropertyChanged("Name_Room");
					this.OnName_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Room", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type_Room
		{
			get
			{
				return this._Type_Room;
			}
			set
			{
				if ((this._Type_Room != value))
				{
					if (this._Room_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnType_RoomChanging(value);
					this.SendPropertyChanging();
					this._Type_Room = value;
					this.SendPropertyChanged("Type_Room");
					this.OnType_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size_No", DbType="Int NOT NULL")]
		public int Size_No
		{
			get
			{
				return this._Size_No;
			}
			set
			{
				if ((this._Size_No != value))
				{
					this.OnSize_NoChanging(value);
					this.SendPropertyChanging();
					this._Size_No = value;
					this.SendPropertyChanged("Size_No");
					this.OnSize_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Classroom_Time", Storage="_Classroom_Times", ThisKey="Room_ID", OtherKey="Room_ID")]
		public EntitySet<Classroom_Time> Classroom_Times
		{
			get
			{
				return this._Classroom_Times;
			}
			set
			{
				this._Classroom_Times.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_Type_Room", Storage="_Room_Type", ThisKey="Type_Room", OtherKey="Type_Name", IsForeignKey=true)]
		public Room_Type Room_Type
		{
			get
			{
				return this._Room_Type.Entity;
			}
			set
			{
				Room_Type previousValue = this._Room_Type.Entity;
				if (((previousValue != value) 
							|| (this._Room_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room_Type.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._Room_Type.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._Type_Room = value.Type_Name;
					}
					else
					{
						this._Type_Room = default(string);
					}
					this.SendPropertyChanged("Room_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classroom_Times(Classroom_Time entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_Classroom_Times(Classroom_Time entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	public partial class BranchSearchIDResult
	{
		
		private int _ID_Branch;
		
		private string _Branch_Name;
		
		private string _Degree;
		
		public BranchSearchIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Branch", DbType="Int NOT NULL")]
		public int ID_Branch
		{
			get
			{
				return this._ID_Branch;
			}
			set
			{
				if ((this._ID_Branch != value))
				{
					this._ID_Branch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch_Name
		{
			get
			{
				return this._Branch_Name;
			}
			set
			{
				if ((this._Branch_Name != value))
				{
					this._Branch_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this._Degree = value;
				}
			}
		}
	}
	
	public partial class CourseSearchIDResult
	{
		
		private int _Course_ID;
		
		private int _Branch_ID;
		
		private System.Nullable<int> _TermNo;
		
		private string _Name_Course;
		
		private string _Type_Course;
		
		private System.Nullable<decimal> _CourseCode;
		
		private System.Nullable<int> _TheoryUnitNo;
		
		private System.Nullable<int> _PracticalUnitNo;
		
		private string _InRequisite_CourseID;
		
		private string _PreRequisite_CourseID;
		
		public CourseSearchIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="Int NOT NULL")]
		public int Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this._Course_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_ID", DbType="Int NOT NULL")]
		public int Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					this._Branch_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermNo", DbType="Int")]
		public System.Nullable<int> TermNo
		{
			get
			{
				return this._TermNo;
			}
			set
			{
				if ((this._TermNo != value))
				{
					this._TermNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Course", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name_Course
		{
			get
			{
				return this._Name_Course;
			}
			set
			{
				if ((this._Name_Course != value))
				{
					this._Name_Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Course", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_Course
		{
			get
			{
				return this._Type_Course;
			}
			set
			{
				if ((this._Type_Course != value))
				{
					this._Type_Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this._CourseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryUnitNo", DbType="Int")]
		public System.Nullable<int> TheoryUnitNo
		{
			get
			{
				return this._TheoryUnitNo;
			}
			set
			{
				if ((this._TheoryUnitNo != value))
				{
					this._TheoryUnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalUnitNo", DbType="Int")]
		public System.Nullable<int> PracticalUnitNo
		{
			get
			{
				return this._PracticalUnitNo;
			}
			set
			{
				if ((this._PracticalUnitNo != value))
				{
					this._PracticalUnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InRequisite_CourseID", DbType="NVarChar(100)")]
		public string InRequisite_CourseID
		{
			get
			{
				return this._InRequisite_CourseID;
			}
			set
			{
				if ((this._InRequisite_CourseID != value))
				{
					this._InRequisite_CourseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreRequisite_CourseID", DbType="NVarChar(100)")]
		public string PreRequisite_CourseID
		{
			get
			{
				return this._PreRequisite_CourseID;
			}
			set
			{
				if ((this._PreRequisite_CourseID != value))
				{
					this._PreRequisite_CourseID = value;
				}
			}
		}
	}
	
	public partial class CourseSearchNAMEResult
	{
		
		private int _Course_ID;
		
		private int _Branch_ID;
		
		private System.Nullable<int> _TermNo;
		
		private string _Name_Course;
		
		private string _Type_Course;
		
		private System.Nullable<decimal> _CourseCode;
		
		private System.Nullable<int> _TheoryUnitNo;
		
		private System.Nullable<int> _PracticalUnitNo;
		
		private string _InRequisite_CourseID;
		
		private string _PreRequisite_CourseID;
		
		public CourseSearchNAMEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course_ID", DbType="Int NOT NULL")]
		public int Course_ID
		{
			get
			{
				return this._Course_ID;
			}
			set
			{
				if ((this._Course_ID != value))
				{
					this._Course_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch_ID", DbType="Int NOT NULL")]
		public int Branch_ID
		{
			get
			{
				return this._Branch_ID;
			}
			set
			{
				if ((this._Branch_ID != value))
				{
					this._Branch_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermNo", DbType="Int")]
		public System.Nullable<int> TermNo
		{
			get
			{
				return this._TermNo;
			}
			set
			{
				if ((this._TermNo != value))
				{
					this._TermNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Course", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name_Course
		{
			get
			{
				return this._Name_Course;
			}
			set
			{
				if ((this._Name_Course != value))
				{
					this._Name_Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Course", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_Course
		{
			get
			{
				return this._Type_Course;
			}
			set
			{
				if ((this._Type_Course != value))
				{
					this._Type_Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseCode", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CourseCode
		{
			get
			{
				return this._CourseCode;
			}
			set
			{
				if ((this._CourseCode != value))
				{
					this._CourseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoryUnitNo", DbType="Int")]
		public System.Nullable<int> TheoryUnitNo
		{
			get
			{
				return this._TheoryUnitNo;
			}
			set
			{
				if ((this._TheoryUnitNo != value))
				{
					this._TheoryUnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticalUnitNo", DbType="Int")]
		public System.Nullable<int> PracticalUnitNo
		{
			get
			{
				return this._PracticalUnitNo;
			}
			set
			{
				if ((this._PracticalUnitNo != value))
				{
					this._PracticalUnitNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InRequisite_CourseID", DbType="NVarChar(100)")]
		public string InRequisite_CourseID
		{
			get
			{
				return this._InRequisite_CourseID;
			}
			set
			{
				if ((this._InRequisite_CourseID != value))
				{
					this._InRequisite_CourseID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreRequisite_CourseID", DbType="NVarChar(100)")]
		public string PreRequisite_CourseID
		{
			get
			{
				return this._PreRequisite_CourseID;
			}
			set
			{
				if ((this._PreRequisite_CourseID != value))
				{
					this._PreRequisite_CourseID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
